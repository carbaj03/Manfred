apply plugin: 'com.android.feature'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: rootProject.file('gradle/generated-kotlin-sources.gradle')

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':base')
    implementation project(':uikit')

    implementation 'com.google.android.material:material:1.1.0-alpha05'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.worldturner.medeia:medeia-validator-gson:1.1.0'
    implementation 'com.worldturner.medeia:medeia-validator-jackson:1.1.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
//    implementation "androidx.work:work-runtime-ktx:$workVersion"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha03'

    implementation "io.arrow-kt:arrow-core-data:$arrow_version"
    implementation "io.arrow-kt:arrow-core-extensions:$arrow_version"
    implementation "io.arrow-kt:arrow-syntax:$arrow_version"
    implementation "io.arrow-kt:arrow-typeclasses:$arrow_version"
    implementation "io.arrow-kt:arrow-extras-data:$arrow_version"
    implementation "io.arrow-kt:arrow-extras-extensions:$arrow_version"
    kapt "io.arrow-kt:arrow-meta:$arrow_version"

    implementation "io.arrow-kt:arrow-query-language:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-free-data:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-free-extensions:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-mtl:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-effects-data:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-effects-extensions:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-effects-io-extensions:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-effects-rx2-data:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-effects-rx2-extensions:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-effects-reactor-data:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-effects-reactor-extensions:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-optics:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-generic:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-recursion-data:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-recursion-extensions:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-query-language:$arrow_version" //optional
    implementation "io.arrow-kt:arrow-integration-retrofit-adapter:$arrow_version"
}